const handler = async (m, {isOwner, isAdmin, conn, text, participants, args, command, usedPrefix}) => {
  if (usedPrefix == 'a' || usedPrefix == 'A') return;
m.react('‚úÖ') 
  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }
  const pesan = args.join` `;
const oi = `üìß ùôàùôöùô£ùô®ùôñùôüùôö: ${pesan}\nüçí ùôàùôûùôöùô¢ùôóùôßùô§ùô®: _*${participants.length}*_`;
  let teks = `üçí Ôº≤Ôº•Ôº∂Ôº©Ôº∂Ôº°ÔºÆ Ôº∞Ôº¨Ôº°ÔºÆÔº¥Ôº°Ôº≥\n\n ${oi}\n\n‚îè„Éªüçí ùôßùôöùô´ùôûùô´ùôñùô£ ùôõùôö@ùô® !\n`;
  for (const mem of participants) {
    teks += `‚î£„Éªüçí @${mem.id.split('@')[0]}\n`;
  }
  teks += `‚îó„Éªüçí ùôÇùôöùô£ùôöùô®ùôûùô®-ùòΩùô§ùô©-ùôãùôßùô§`;
  conn.sendMessage(m.chat, {text: teks, mentions: participants.map((a) => a.id)} );
};
handler.help = ['tagall <mesaje>', 'invocar <mesaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|invocacion|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;
export default handler;